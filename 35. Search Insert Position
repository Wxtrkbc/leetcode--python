'''
class Solution:
    # @param {integer[]} nums
    # @param {integer} target
    # @return {integer}
    def searchInsert(self, nums, target):
        L, R = 0, len(nums) - 1
        while L <= R:
            M = (L + R) / 2
            if nums[M] == target:
                return M
            if nums[M] < target:
                L = M + 1
            else:
                R = M - 1
        return L
'''

class Solution(object):
    def searchInsert(self, nums, target):
        if target not in nums:
            nums.append(target)
            nums.sort()
        l,r =0,len(nums)-1
        while l<r:
            mid=int((l+r)/2)
            if nums[mid]==target:
                return mid
            if nums[mid]<target:
                l=mid+1
            else:
                r=mid-1
        return l
